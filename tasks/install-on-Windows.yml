---
- name: make password for user
  set_fact:
    user_password: "{{ lookup('password', '/tmp/bk-agent-password length=32 chars=ascii_letters,digits,punctuation') }}"
  no_log: "{{ buildkite_agent_hide_secrets | default(true) }}"

- name: make the user
  win_user:
    description: "Runs BuildKite jobs. See https://buildkite.com/docs/agent/v3/windows."
    name: "buildkite-agent"
    # TODO: Single static file with no isolation between runs is unsafe (but that's unlikely to occur)
    password: "{{ user_password }}"
    password_never_expires: yes
    user_cannot_change_password: yes

- name: grant administrator privileges to user
  win_group_membership:
    name: Administrators
    members:
      - buildkite-agent
    state: "{{ 'present' if buildkite_agent_windows_grant_admin else 'absent' }}"
  notify:
    - restart-windows-buildkite

- name: make necessary directories that are safe ahead of user instantiation by service
  win_file:
    state: directory
    path: '{{ item }}'
  with_items:
    - 'c:/program files/buildkite-agent'
    - '{{ buildkite_agent_conf_dir[ansible_os_family] }}'

- name: fetch buildkite-agent windows release
  win_get_url:
    url: https://github.com/buildkite/agent/releases/download/v{{ buildkite_agent_version }}/buildkite-agent-windows-amd64-{{ buildkite_agent_version }}.zip
    dest: 'c:/windows/temp/buildkite-agent-windows-{{ buildkite_agent_platform }}-{{ buildkite_agent_version }}.zip'
    timeout: 30

- name: unzip the release
  win_unzip:
    src: 'c:/windows/temp/buildkite-agent-windows-{{ buildkite_agent_platform }}-{{ buildkite_agent_version }}.zip'
    dest: 'c:/program files/buildkite-agent'
    creates: 'c:/program files/buildkite-agent/buildkite-agent.exe'
    delete_archive: yes

- name: delete the shipped configuration stub to avoid binary picking it up (buildkite/agent#881)
  win_file:
    state: absent
    path: c:/program files/buildkite-agent/buildkite-agent.cfg

- name: render the configuration template
  win_template:
    src: "buildkite-agent.cfg.j2"
    dest: '{{ buildkite_agent_conf_dir[ansible_os_family] }}/buildkite-agent.cfg'
  notify:
    - restart-windows-buildkite

- name: install nssm to manage the process as a service
  win_chocolatey:
    name: nssm
    version: "{{ buildkite_agent_nssm_version | default('2.24.101.20180116') }}"

# starting the service triggers the home directory to be created.
# if the home directory exists already, windows will dodge that and not use it.
- name: configure buildkite-agent as an nssm service
  win_nssm:
    name: buildkite-agent
    user: buildkite-agent
    state: "{{ 'started' if buildkite_agent_allow_service_startup[ansible_os_family] else 'present' }}"
    # password lookup plugin will return the contents of the file if it exists
    password: "{{ user_password }}"
    application: "c:/program files/buildkite-agent/buildkite-agent.exe"
    app_parameters_free_form: start {{ buildkite_agent_start_parameters[ansible_os_family] }}
    stdout_file: "{{ buildkite_agent_conf_dir[ansible_os_family] }}/buildkite-agent.log"
    stderr_file: "{{ buildkite_agent_conf_dir[ansible_os_family] }}/buildkite-agent.log"

- name: make necessary directories
  win_file:
    state: directory
    path: '{{ item }}'
  with_items:
    - '{{ buildkite_agent_hooks_dir[ansible_os_family] }}'
    - '{{ buildkite_agent_plugins_dir[ansible_os_family] }}'
    - '{{ buildkite_agent_builds_dir[ansible_os_family] }}'

- name: Allow user full control inside necessary locations
  win_acl:
    path: "{{ item }}"
    user: buildkite-agent
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
  with_items:
    - "{{ buildkite_agent_builds_dir[ansible_os_family] }}"
