---
# https://buildkite.com/docs/agent/v3/osx
# TODO:
# * Conditionally upgrade when already present - `brew update && brew upgrade buildkite-agent`
- name: Add buildkite's tap
  homebrew_tap:
    name: buildkite/buildkite
    state: present

- name: Install buildkite-agent
  homebrew:
    name: buildkite-agent
    state: latest
    update_homebrew: yes

- name: Create user
  block:
    - name: make password for user
      set_fact:
        buildkite_agent_user_password: "{{ lookup('password', '/tmp/bk-agent-password length=32 chars=ascii_letters,digits,punctuation') }}"
      no_log: "{{ buildkite_agent_hide_secrets | default(true) }}"

    - name: Write scripts needed to make user
      copy:
        src: "{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: 0755
      with_items:
        - "create-local-user.{{ ansible_os_family }}.sh"
        - "kcpassword"

    - name: Create user via script
      shell: >-
        /usr/local/bin/create-local-user.{{ ansible_os_family }}.sh 
        '{{ agent_username }}'
        '{{ buildkite_agent_grant_admin | ternary("true", "false") }}'
      args:
        creates: "/Users/{{ agent_username }}"
      become: true
      environment:
        USER_PASSWORD: "{{ buildkite_agent_user_password }}"

- name: Configure Buildkite
  template:
    src: "buildkite-agent.cfg.j2"
    dest: "{{ buildkite_agent_conf_dir[ansible_os_family] }}/buildkite-agent.cfg"
    mode: "0600"
  notify:
    - "Restart Buildkite Agent and Register for Login"

- name: Set environment hook to load bash profile for test runs
  template:
    src: "buildkite-agent-hook-environment.sh"
    dest: "{{ buildkite_agent_hooks_dir[ansible_os_family] }}/environment"
    mode: "0600"
  when: buildkite_agent_load_bash_profile == True
  notify:
    - "Restart Buildkite Agent and Register for Login"
